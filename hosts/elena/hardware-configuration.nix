# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:
let
  zfsFilesystem = device: {
    inherit device;
    fsType = "zfs";
    options = [ "noatime" "nodiratime" ];
  };
in
{
  imports = [ "${modulesPath}/installer/scan/not-detected.nix" ];

  boot.initrd.availableKernelModules = [ "ehci_pci" "ahci" "mpt3sas" "xhci_pci" "usbhid" "usb_storage" "sd_mod" "sr_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems = {
    "/boot" = { device = "/dev/disk/by-uuid/3E1E-2057"; fsType = "vfat"; };
    "/" = zfsFilesystem "tank/root/nixos";
    "/nix" = zfsFilesystem "tank/root/nix";
    "/home" = zfsFilesystem "tank/home";
    "/var/lib/libvirt" = zfsFilesystem "tank/virtualization/libvirt";
    "/var/lib/libvirt/images" = zfsFilesystem "tank/virtualization/libvirt/images";
    "/var/lib/libvirt/images/ssd" = zfsFilesystem "tank/virtualization/libvirt/images/ssd";
    "/storage/appdata/docker" = zfsFilesystem "tank/appdata/docker";
    "/storage/appdata/games" = zfsFilesystem "tank/appdata/games";
    "/storage/appdata/rclone" = zfsFilesystem "tank/appdata/rclone";
    "/storage/backup/devices" = zfsFilesystem "tank/backup/devices";
    "/storage/download" = zfsFilesystem "tank/download";
    "/storage/media/adult" = zfsFilesystem "tank/media/adult";
    "/storage/media/books" = zfsFilesystem "tank/media/books";
    "/storage/media/music" = zfsFilesystem "tank/media/music";
    "/storage/media/recorded" = zfsFilesystem "tank/media/recorded";
    "/storage/media/software" = zfsFilesystem "tank/media/software";
    "/storage/media/streams" = zfsFilesystem "tank/media/streams";
    "/storage/media/videos" = zfsFilesystem "tank/media/videos";
    "/storage/personal" = zfsFilesystem "tank/personal";
    "/var/lib/containers" = zfsFilesystem "tank/virtualization/containers";
    "/var/lib/docker" = zfsFilesystem "tank/virtualization/docker";
  };

  swapDevices =
    [
      { device = "/dev/disk/by-uuid/7150d268-bc6c-430c-a8f0-eeacf879b9d9"; }
    ];

  nix.maxJobs = lib.mkDefault 32;
  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
}
